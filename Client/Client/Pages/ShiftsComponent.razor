@page "/shift"
@using Client.Models
@using Client.Data
@using Client.Authentication
@using Client.Data.Shifts
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IShiftService ShiftService
@attribute [Authorize(Policy = "SecurityLevel4")]

<EditForm Model="@newShift" OnValidSubmit="@CreateNewShift">
    <DataAnnotationsValidator/>

    <div class="create-shift-content">
        <main>
            <div class="shift-auth-content">
                
                 <div class="sus-acolo">
                                        <h2 style="margin-left: 50px;">Create shift</h2>
                                        <button @onclick="Cancel" class="createShiftBtn">Cancel</button>
                                    </div>

                <hr class="divider"/>

                <div class="forms" autocomplete="on">

                    <div class="name">
                        <div class="box">
                            <fieldset>
                                <label>Company Name</label>
                                <InputText class="text-input" type="text"
                                           @bind-Value="newShift.CompanyName" required/>
                            </fieldset>
                            <ValidationMessage For="@(() => newShift.CompanyName)"/>
                        </div>

                        <div class="box">
                            <fieldset>
                                <label>Job Title</label>
                                <InputText class="text-input" type="text"
                                           @bind-Value="newShift.JobTitle" required/>
                            </fieldset>
                            <ValidationMessage For="@(() => newShift.JobTitle)"/>
                        </div>
                    </div>

                    <div class="name">
                        <div class="box">
                            <fieldset>
                                <label>Start Date</label>
                                <InputDate class="text-input" type="text"
                                           @bind-Value="newShift.Date" required/>
                            </fieldset>
                            <ValidationMessage For="@(() => newShift.Date)"/>
                        </div>

                        <div class="box">
                            <fieldset>
                                <label>Time</label>
                                <select name="type" class="state" @bind="@selectedType">
                                    @foreach (var t in time)
                                    {
                                        <option value=@t>@t</option>
                                    }
                                </select>
                            </fieldset>
                            <ValidationMessage For="@(() => newShift.PreferableWorkTime)"/>
                        </div>
                    </div>

                    <div class="name">
                        <div class="box">
                            <fieldset>
                                <label>Hour Wage</label>
                                <InputNumber class="text-input" @bind-Value="newShift.HourWage" required/>
                            </fieldset>
                            <ValidationMessage For="@(() => newShift.HourWage)"/>
                        </div>
                    </div>

                    <div class="box-long">
                        <fieldset>
                            <label>Description</label>
                            <InputTextArea class="long-text" type="text"
                                           @bind-Value="newShift.Description" required/>
                        </fieldset>
                        <ValidationMessage For="@(() => newShift.Description)"/>
                    </div>

                    <div class="box-long">
                        <fieldset>
                            <label>Requirements (optional)</label>
                            <InputTextArea class="long-text" type="text"
                                           @bind-Value="newShift.Requirements"/>
                        </fieldset>
                        <ValidationMessage For="@(() => newShift.Requirements)"/>
                    </div>
                </div>
                <div style="color:red">@errorMessage</div>
                <button type="submit" class="signupBtn">Create</button>
            </div>
        </main>
    </div>
</EditForm>

@code {

    string errorMessage;
    private Shift newShift = new Shift();
    private List<string> time = new List<string>() {"Day (6-14)", "Evening (14-22)", "Night (22-6)"};
    string selectedType = "Day (6-14)";


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;
        if (!user.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"/log-in");
        }
    }

    private void CreateNewShift()
    {
        if (newShift.Requirements == null)
        {
            newShift.Requirements = "No requirements.";
        }
        newShift.UserName = ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidatedUsername();
        newShift.PreferableWorkTime = selectedType;
        Console.Out.WriteLine(newShift.ToString());
        ShiftService.AddShiftAsync(newShift);
        NavigationManager.NavigateTo("/shift-list");
    }

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }


    private void Cancel()
    {
        NavigationManager.NavigateTo("/shift-list");
    }

}